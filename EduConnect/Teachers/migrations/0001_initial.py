# Generated by Django 5.1.3 on 2025-03-04 10:52

import django.db.models.deletion
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Course_Module', '0001_initial'),
        ('Students', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReceivedPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration', models.IntegerField(help_text='Duration in months')),
                ('payment_date', models.DateField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_payments', to='Course_Module.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments_received', to='Students.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_text', models.TextField()),
                ('response_text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('resolved', 'Resolved')], default='pending', max_length=10)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_queries', to='Course_Module.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_queries', to='Students.student')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacher_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='teacher_images/')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('social_links', models.TextField(blank=True, null=True)),
                ('joining_date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Suspended', 'Suspended')], default='Active', max_length=20)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_posts', to='Course_Module.course')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='PaidPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Commission paid to EduConnect', max_digits=10)),
                ('payment_date', models.DateField(auto_now_add=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_payments', to='Course_Module.course')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments_made', to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Students.student')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='Teachers.post')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherAward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='teacher_awards/')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_award', to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('Creator', 'Creator'), ('Co-Teacher', 'Co-Teacher')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_courses', to='Course_Module.course')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_courses', to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_courses', models.PositiveIntegerField(default=0)),
                ('active_students', models.PositiveIntegerField(default=0)),
                ('average_feedback_score', models.FloatField(default=0.0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('teacher', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard', to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Course Content Quality', 'Course Content Quality'), ('Instructor Performance', 'Instructor Performance'), ('Platform Usability', 'Platform Usability'), ('Live Session Experience', 'Live Session Experience'), ('Assignment/Task Relevance', 'Assignment/Task Relevance'), ('Certification Process', 'Certification Process'), ('Support/Customer Service', 'Support/Customer Service'), ('Payment Issues', 'Payment Issues'), ('Other', 'Other')], max_length=50)),
                ('custom_category', models.CharField(blank=True, max_length=255, null=True)),
                ('feedback_text', models.TextField()),
                ('rating', models.IntegerField()),
                ('suggestions', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='feedback_uploads/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherNotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True)),
                ('deletion_notifications', models.BooleanField(default=False)),
                ('mobile_notifications', models.BooleanField(default=False)),
                ('auth_notifications', models.BooleanField(default=False)),
                ('course_notifications', models.BooleanField(default=False)),
                ('teacher', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid')], default='pending', max_length=20)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('courses_created', models.PositiveIntegerField(default=0)),
                ('students_engaged', models.PositiveIntegerField(default=0)),
                ('webinars_conducted', models.PositiveIntegerField(default=0)),
                ('assignments_graded', models.PositiveIntegerField(default=0)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualifications', models.TextField(blank=True, null=True)),
                ('experience_years', models.PositiveIntegerField(blank=True, null=True)),
                ('philosophy', models.TextField(blank=True, null=True)),
                ('specializations', models.TextField(blank=True, null=True)),
                ('languages_spoken', models.TextField(blank=True, null=True)),
                ('interest', models.TextField(blank=True, null=True)),
                ('availability', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=56, null=True)),
                ('social_links_linkedin', models.TextField(blank=True, null=True)),
                ('social_links_github', models.TextField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('public_visibility', models.BooleanField(default=True)),
                ('two_factor_auth', models.BooleanField(default=False)),
                ('teacher', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('Webinar', 'Webinar'), ('Office Hour', 'Office Hour'), ('Meeting', 'Meeting')], max_length=50)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='Teachers.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherStudentData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('progress', models.FloatField(default=0.0)),
                ('grade', models.CharField(blank=True, max_length=10, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_enrollments', to='Course_Module.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrolled_courses', to='Students.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students_data', to='Teachers.teacher')),
            ],
        ),
    ]
